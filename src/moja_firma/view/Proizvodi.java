/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package moja_firma.view;

import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import moja_firma.controller.ObradaMaterijala;
import moja_firma.controller.ObradaProizvoda;
import moja_firma.controller.ObradaRada;
import moja_firma.model.Proizvod;
import moja_firma.model.Materijal;
import moja_firma.model.Rad;
import moja_firma.utility.Baza;
import moja_firma.utility.Pomocno;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
import org.imgscalr.Scalr;

/**
 *
 * @author Dubravka
 */
public class Proizvodi extends Upozorenja {
    
     int width = (Toolkit.getDefaultToolkit().getScreenSize().width/2)-475;
     int height = (Toolkit.getDefaultToolkit().getScreenSize().height/2)-220;
     private ObradaProizvoda obradaProizvoda;
     private Proizvod odabrano;
     private SimpleDateFormat df;     
     

    /**
     * Creates new form Proizvodi
     */
    public Proizvodi() {
        initComponents();
        setLocation(width, height);
        jLabel10.setIcon(new javax.swing.ImageIcon("slike" + File.separator + "Pozadine" + File.separator + "NestoPlavoV.png" ));
        obradaProizvoda=new ObradaProizvoda();
        lista.setModel(new DefaultListModel<Proizvod>());
        setTitle("Proizvodi moje firme " );
        
              
       
          ObradaMaterijala omo = new ObradaMaterijala();
        List<Materijal> lmo = omo.dohvati("");
        DefaultListModel<Materijal> mmo = new DefaultListModel<>();
        for (Materijal l : lmo) {
            mmo.addElement(l);
        }
        sviMaterijali.setModel(mmo);
        materijaliNaProizvodu.setModel(new DefaultListModel<Materijal>());
        
           ObradaRada oro = new ObradaRada();
        List<Rad> l1ro = oro.dohvati("");
        DefaultListModel<Rad> m1ro = new DefaultListModel<>();
        for (Rad l1 : l1ro) {
            m1ro.addElement(l1);
        }      
        
         sviRadovi.setModel(m1ro);
         radoviNaProizvodu.setModel(new DefaultListModel<Rad>());
    }
    
    
    
     private void cistiPolja(){       
        nazivpr.setText("");
        dimenzija.setText("");
        kolicina.setText("");
        grupaproizvoda.setText("");
        datumproizvodnje.setText("");
        rokizrade.setText("");
        sirovinskisastav.setText("");
        cijena.setText("");
         ((DefaultListModel<Materijal>) materijaliNaProizvodu.getModel()).removeAllElements();
          ((DefaultListModel<Rad>) radoviNaProizvodu.getModel()).removeAllElements();
     }
     
       private Proizvod popuni(Proizvod o){
        o.setDimenzija(dimenzija.getText().trim());
        o.setKolicina(kolicina.getText().trim());
        o.setGrupaproizvoda(grupaproizvoda.getText().trim());
        o.setSirovinskisastav(sirovinskisastav.getText().trim());
        o.setCijena(new BigDecimal(cijena.getText().trim()));
        if(datumproizvodnje.getText().trim().length()>0){
        try {
            o.setDatumrodenja(df.parse(datumproizvodnje.getText().trim().replace(" ","")));
        } catch (Exception e) {           
        }
        }else{
            o.setDatumproizvodnje(null);
        } 
       
    
          if(rokizrade.getText().trim().length()>0){
        try {
            o.setRokizrade(df.parse(rokizrade.getText().trim().replace(" ","")));
        } catch (Exception e) {
             }
        }else{
            o.setRokizrade(null);
        }      
                
        return o;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        proizvod1 = new moja_firma.model.Proizvod();
        jLabel11 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        uvjet = new javax.swing.JTextField();
        akcijaTrazi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lista = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        nazivpr = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        dimenzija = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        kolicina = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        grupaproizvoda = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        akcijaPromijeni = new javax.swing.JButton();
        akcijaDodajNovi = new javax.swing.JButton();
        akcijaObrisi = new javax.swing.JButton();
        akcijaOdustani = new javax.swing.JButton();
        datumproizvodnje = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        rokizrade = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        sirovinskisastav = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cijena = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        materijaliNaProizvodu = new javax.swing.JList();
        jLabel22 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        sviRadovi = new javax.swing.JList();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        sviMaterijali = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        radoviNaProizvodu = new javax.swing.JList();
        jLabel24 = new javax.swing.JLabel();
        akcijaObrisiIzMaterijala = new javax.swing.JButton();
        akcijaDodajMaterijalProizvodu = new javax.swing.JButton();
        akcijaObrisiIzRadova = new javax.swing.JButton();
        akcijaDodajRadoveProizvodu = new javax.swing.JButton();
        slika = new javax.swing.JLabel();
        akcijaPromijenaSlike = new javax.swing.JButton();
        akcijaGenerirajPDF = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();

        jLabel11.setText("jLabel11");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("PROIZVOD");
        setBackground(new java.awt.Color(204, 255, 255));
        setMinimumSize(new java.awt.Dimension(878, 674));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Uvjet (* za sve)");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        uvjet.setBackground(new java.awt.Color(204, 255, 255));
        uvjet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                uvjetKeyPressed(evt);
            }
        });
        getContentPane().add(uvjet, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 80, -1));

        akcijaTrazi.setBackground(new java.awt.Color(0, 204, 204));
        akcijaTrazi.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        akcijaTrazi.setText("TRAÅ½I");
        akcijaTrazi.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        akcijaTrazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaTraziActionPerformed(evt);
            }
        });
        getContentPane().add(akcijaTrazi, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, 72, -1));

        lista.setBackground(new java.awt.Color(204, 255, 255));
        lista.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                listaKeyPressed(evt);
            }
        });
        lista.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lista);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 165, 200));

        jLabel2.setText("Naziv proizvoda");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 70, 120, -1));

        nazivpr.setBackground(new java.awt.Color(204, 255, 255));
        getContentPane().add(nazivpr, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 70, 140, -1));

        jLabel3.setText("Dimenzija");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 110, 60, -1));

        dimenzija.setBackground(new java.awt.Color(204, 255, 255));
        getContentPane().add(dimenzija, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 110, 140, -1));

        jLabel4.setText("KoliÄina");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 150, 50, -1));

        kolicina.setBackground(new java.awt.Color(204, 255, 255));
        getContentPane().add(kolicina, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 150, 140, -1));

        jLabel5.setText("Grupa proizvoda");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 230, 110, -1));

        grupaproizvoda.setBackground(new java.awt.Color(204, 255, 255));
        getContentPane().add(grupaproizvoda, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 230, 140, -1));

        jLabel6.setText("Datum proizvodnje");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 270, 110, -1));

        akcijaPromijeni.setBackground(new java.awt.Color(0, 204, 204));
        akcijaPromijeni.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        akcijaPromijeni.setText("PROMIJENI");
        akcijaPromijeni.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        akcijaPromijeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaPromijeniActionPerformed(evt);
            }
        });
        getContentPane().add(akcijaPromijeni, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 240, 49));

        akcijaDodajNovi.setBackground(new java.awt.Color(0, 204, 204));
        akcijaDodajNovi.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        akcijaDodajNovi.setText("DODAJ  NOVI");
        akcijaDodajNovi.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        akcijaDodajNovi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaDodajNoviActionPerformed(evt);
            }
        });
        getContentPane().add(akcijaDodajNovi, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 0, 240, 49));

        akcijaObrisi.setBackground(new java.awt.Color(0, 204, 204));
        akcijaObrisi.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        akcijaObrisi.setText("OBRIÅ I");
        akcijaObrisi.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        akcijaObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaObrisiActionPerformed(evt);
            }
        });
        getContentPane().add(akcijaObrisi, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 0, 240, 49));

        akcijaOdustani.setBackground(new java.awt.Color(0, 204, 204));
        akcijaOdustani.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        akcijaOdustani.setText("ODUSTANI");
        akcijaOdustani.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        akcijaOdustani.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaOdustaniActionPerformed(evt);
            }
        });
        getContentPane().add(akcijaOdustani, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 0, 230, 49));

        datumproizvodnje.setBackground(new java.awt.Color(204, 255, 255));
        getContentPane().add(datumproizvodnje, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 270, 140, -1));

        jLabel7.setText("Rok izrade");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 310, 90, -1));

        rokizrade.setBackground(new java.awt.Color(204, 255, 255));
        getContentPane().add(rokizrade, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 310, 140, -1));

        jLabel8.setText("Sirovinski sastav");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 350, 100, -1));

        sirovinskisastav.setBackground(new java.awt.Color(204, 255, 255));
        getContentPane().add(sirovinskisastav, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 350, 140, -1));

        jLabel9.setText("Cijena");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 190, 60, -1));

        cijena.setBackground(new java.awt.Color(204, 255, 255));
        getContentPane().add(cijena, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 190, 140, -1));

        jLabel21.setText("Svi materijali");
        getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 70, 80, -1));

        materijaliNaProizvodu.setBackground(new java.awt.Color(204, 255, 255));
        jScrollPane4.setViewportView(materijaliNaProizvodu);

        getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 100, 124, 240));

        jLabel22.setText("Materijali na proizvodu");
        getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 70, 140, -1));

        sviRadovi.setBackground(new java.awt.Color(204, 255, 255));
        jScrollPane5.setViewportView(sviRadovi);

        getContentPane().add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 400, 144, 230));

        jLabel23.setText("Svi radovi");
        getContentPane().add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 370, 105, -1));

        sviMaterijali.setBackground(new java.awt.Color(204, 255, 255));
        jScrollPane6.setViewportView(sviMaterijali);

        getContentPane().add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 100, 150, 240));

        radoviNaProizvodu.setBackground(new java.awt.Color(204, 255, 255));
        jScrollPane2.setViewportView(radoviNaProizvodu);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 400, 128, 230));

        jLabel24.setText("Radovi na proizvodu");
        getContentPane().add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 370, 128, -1));

        akcijaObrisiIzMaterijala.setBackground(new java.awt.Color(0, 204, 204));
        akcijaObrisiIzMaterijala.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        akcijaObrisiIzMaterijala.setText(">");
        akcijaObrisiIzMaterijala.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        akcijaObrisiIzMaterijala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaObrisiIzMaterijalaActionPerformed(evt);
            }
        });
        getContentPane().add(akcijaObrisiIzMaterijala, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 170, 40, -1));

        akcijaDodajMaterijalProizvodu.setBackground(new java.awt.Color(0, 204, 204));
        akcijaDodajMaterijalProizvodu.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        akcijaDodajMaterijalProizvodu.setText("<");
        akcijaDodajMaterijalProizvodu.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        akcijaDodajMaterijalProizvodu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaDodajMaterijalProizvoduActionPerformed(evt);
            }
        });
        getContentPane().add(akcijaDodajMaterijalProizvodu, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 230, 40, -1));

        akcijaObrisiIzRadova.setBackground(new java.awt.Color(0, 204, 204));
        akcijaObrisiIzRadova.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        akcijaObrisiIzRadova.setText(">");
        akcijaObrisiIzRadova.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        akcijaObrisiIzRadova.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaObrisiIzRadovaActionPerformed(evt);
            }
        });
        getContentPane().add(akcijaObrisiIzRadova, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 460, 40, -1));

        akcijaDodajRadoveProizvodu.setBackground(new java.awt.Color(0, 204, 204));
        akcijaDodajRadoveProizvodu.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        akcijaDodajRadoveProizvodu.setText("<");
        akcijaDodajRadoveProizvodu.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        akcijaDodajRadoveProizvodu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaDodajRadoveProizvoduActionPerformed(evt);
            }
        });
        getContentPane().add(akcijaDodajRadoveProizvodu, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 520, 40, -1));

        slika.setText("Slika proizvoda");
        getContentPane().add(slika, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, 250, 250));

        akcijaPromijenaSlike.setBackground(new java.awt.Color(0, 204, 204));
        akcijaPromijenaSlike.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        akcijaPromijenaSlike.setText("PROMIJENI SLIKU");
        akcijaPromijenaSlike.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        akcijaPromijenaSlike.setMaximumSize(new java.awt.Dimension(135, 22));
        akcijaPromijenaSlike.setMinimumSize(new java.awt.Dimension(135, 22));
        akcijaPromijenaSlike.setPreferredSize(new java.awt.Dimension(135, 23));
        akcijaPromijenaSlike.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaPromijenaSlikeActionPerformed(evt);
            }
        });
        getContentPane().add(akcijaPromijenaSlike, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 160, 33));

        akcijaGenerirajPDF.setBackground(new java.awt.Color(0, 204, 204));
        akcijaGenerirajPDF.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        akcijaGenerirajPDF.setText("PDF");
        akcijaGenerirajPDF.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        akcijaGenerirajPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaGenerirajPDFActionPerformed(evt);
            }
        });
        getContentPane().add(akcijaGenerirajPDF, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 390, 140, 30));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pozadine/NestoPlavoV.png"))); // NOI18N
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 950, 670));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void akcijaTraziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaTraziActionPerformed
             cistiPolja();

        List<Proizvod> entiteti = obradaProizvoda.
        dohvati(uvjet.getText());

        DefaultListModel<Proizvod> m = new DefaultListModel<>();
        for (Proizvod proizvod : entiteti) {
            m.addElement(proizvod);
        }
          
           /* 
          for (Materijal m : e.getMaterijali()) {
                System.out.println(m.getNaziv());
                
                 for (Rad r : e.getRadovi()) {
                System.out.println(r.getImePrezime());
                 }
                  m.addElement(e);
                  r.addElement(e);
        }*/
        lista.setModel(m);
    }//GEN-LAST:event_akcijaTraziActionPerformed

    private void akcijaObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaObrisiActionPerformed
        
        odabrano = (Proizvod) lista.getSelectedValue();
        if(odabrano==null){
            return;
        }
        if(JOptionPane.showConfirmDialog(getParent(), "Jeste li sigurni da Å¾elite obrisati "
                + odabrano.getNazivpr() + "?","Brisanje proizvoda",JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE)==JOptionPane.NO_OPTION){
            return;
        }

        if(!obradaProizvoda.obrisi(odabrano)){
            return;
        }

        DefaultListModel<Proizvod> m = (DefaultListModel<Proizvod>) lista.getModel();
        m.removeElement(odabrano);
        lista.repaint();
        cistiPolja();
    }//GEN-LAST:event_akcijaObrisiActionPerformed

    private void akcijaPromijeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaPromijeniActionPerformed
          if(odabrano==null){
            return;
        }
        reset();
        //kontorle
        if(nazivpr.getText().trim().isEmpty()){
            greska(nazivpr, "Obavezno naziv proizvoda");
            return;
        }
         odabrano.setNazivpr(nazivpr.getText().trim());
         odabrano.setDimenzija(dimenzija.getText().trim());
           odabrano.setKolicina(kolicina.getText().trim());
            odabrano.setGrupaproizvoda(grupaproizvoda.getText().trim());
       if(datumproizvodnje.getText().trim().length()>0){
        try {
            odabrano.setDatumproizvodnje(df.parse(datumproizvodnje.getText().trim().replace(" ","")));
        } catch (Exception e) {
            greska(datumproizvodnje, "datum nije dobrog formata");
            return;
        }
        }else{
            odabrano.setDatumrodenja(null);
        }
              
     /*         
                if(rokizrade.getText().trim().length()>0){
        try {
            odabrano.setRokizrade(df.parse(rokizrade.getText().trim().replace(" ","")));
        } catch (Exception e) {
            greska(rokizrade, "datum nije dobrog formata");
            return;
        }
        }else{
            odabrano.setRokizrade(null);
        }*/
                odabrano.setSirovinskisastav(sirovinskisastav.getText().trim());
                odabrano.setCijena(new BigDecimal(cijena.getText()));
       
                 List<Materijal> l = new ArrayList<>();
        DefaultListModel<Materijal> m = (DefaultListModel<Materijal>) materijaliNaProizvodu.getModel();
        for(int i=0;i<m.getSize();i++){
            l.add(m.getElementAt(i));
        }
        odabrano.setMaterijali(l);
        
         List<Rad> l1 = new ArrayList<>();
        DefaultListModel<Rad> m1 = (DefaultListModel<Rad>) radoviNaProizvodu.getModel();
        for(int i=0;i<m1.getSize();i++){
            l1.add(m1.getElementAt(i));
        }
        odabrano.setRadovi(l1);


        
         odabrano=popuni(odabrano);
        

        //promjena u bazi
        if(!obradaProizvoda.promjeni(odabrano)){
            return;
        }

        //dodavanje/postavljanje
        //nekada ne radi dobro
        lista.repaint();
    }//GEN-LAST:event_akcijaPromijeniActionPerformed

    private void akcijaDodajNoviActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaDodajNoviActionPerformed
       reset();
          Proizvod o = new Proizvod();
        if(nazivpr.getText().trim().isEmpty()){
            greska(nazivpr, "Obavezno naziv proizvoda");
            return;
        }
         if(datumproizvodnje.getText().trim().isEmpty()){
            greska(datumproizvodnje, "Obavezno datum");
            return;
        }
              if(rokizrade.getText().trim().isEmpty()){
            greska(rokizrade, "Obavezno datum");
            return;
        }
       
        o.setNazivpr(nazivpr.getText().trim());
        o.setDimenzija(dimenzija.getText().trim());
        o.setKolicina(kolicina.getText().trim());
        o.setGrupaproizvoda(grupaproizvoda.getText().trim());     
        o.setSirovinskisastav(sirovinskisastav.getText().trim());
        o.setCijena(new BigDecimal(cijena.getText().trim()));
     /*     if(datumproizvodnje.getText().trim().length()>0){
        try {
            o.setDatumrodenja(df.parse(datumproizvodnje.getText().trim().replace(" ","")));
        } catch (Exception e) {
            greska(datumproizvodnje, "datum nije dobrog formata");
            return;
        }
        }else{
            o.setDatumrodenja(null);
        }
        */
        List<Materijal> l = new ArrayList<>();
        DefaultListModel<Materijal> m = (DefaultListModel<Materijal>) materijaliNaProizvodu.getModel();
        for(int i=0;i<m.getSize();i++){
            l.add(m.getElementAt(i));
        }
        o.setMaterijali(l);
       
        
         List<Rad> l1 = new ArrayList<>();
        DefaultListModel<Rad> m1 = (DefaultListModel<Rad>) radoviNaProizvodu.getModel();
        for(int i=0;i<m1.getSize();i++){
            l1.add(m1.getElementAt(i));
        }
        o.setRadovi(l1);
           
        o=obradaProizvoda.dodaj(o);
        if(o==null){
            //obavijest
            return;
        }        
        DefaultListModel<Proizvod> m2 =(DefaultListModel<Proizvod>) lista.getModel();
        m2.addElement(o);
    }//GEN-LAST:event_akcijaDodajNoviActionPerformed

    private void akcijaOdustaniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaOdustaniActionPerformed
       dispose();
       
    }//GEN-LAST:event_akcijaOdustaniActionPerformed

    private void akcijaObrisiIzMaterijalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaObrisiIzMaterijalaActionPerformed
         List<Materijal> l = this.materijaliNaProizvodu.getSelectedValuesList();
        DefaultListModel<Materijal> m = (DefaultListModel<Materijal>) this.materijaliNaProizvodu.getModel();
         for (Materijal materijal : l) {
             for(int i =0; i<m.getSize();i++){
                 if(m.get(i).getSifra()==materijal.getSifra()){
                     m.removeElementAt(i);
                     break;
                 }
             }
        }
    }//GEN-LAST:event_akcijaObrisiIzMaterijalaActionPerformed

    private void akcijaDodajMaterijalProizvoduActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaDodajMaterijalProizvoduActionPerformed
           List<Materijal> l = this.sviMaterijali.getSelectedValuesList();
       DefaultListModel<Materijal> m = (DefaultListModel<Materijal>) this.materijaliNaProizvodu.getModel();
       boolean postoji; 
       for (Materijal materijal : l) {
           postoji=false;
           for(int i =0; i<m.getSize();i++){
               if(materijal.getSifra()==
                       m.get(i).getSifra()){
                   postoji=true;
                   break;
               }
           }
           if(!postoji){
               m.addElement(materijal);
           }
            
        }
    }//GEN-LAST:event_akcijaDodajMaterijalProizvoduActionPerformed

    private void akcijaObrisiIzRadovaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaObrisiIzRadovaActionPerformed
         List<Rad> l = this.radoviNaProizvodu.getSelectedValuesList();
        DefaultListModel<Rad> m = (DefaultListModel<Rad>) this.radoviNaProizvodu.getModel();
         for (Rad rad : l) {
             for(int i =0; i<m.getSize();i++){
                 if(m.get(i).getSifra()==rad.getSifra()){
                     m.removeElementAt(i);
                     break;
                 }
             }
        }
    }//GEN-LAST:event_akcijaObrisiIzRadovaActionPerformed

    private void akcijaDodajRadoveProizvoduActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaDodajRadoveProizvoduActionPerformed
           List<Rad> l = this.sviRadovi.getSelectedValuesList();
       DefaultListModel<Rad> m = (DefaultListModel<Rad>) this.radoviNaProizvodu.getModel();
       boolean postoji; 
       for (Rad rad : l) {
           postoji=false;
           for(int i =0; i<m.getSize();i++){
               if(rad.getSifra()==
                       m.get(i).getSifra()){
                   postoji=true;
                   break;
               }
           }
           if(!postoji){
               m.addElement(rad);
           }
            
        }
    }//GEN-LAST:event_akcijaDodajRadoveProizvoduActionPerformed

    private void listaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaValueChanged
         reset();
        odabrano = (Proizvod) lista.getSelectedValue();
        if(odabrano==null){
            return;
        }
        nazivpr.setText(odabrano.getNazivpr());
        dimenzija.setText(odabrano.getDimenzija());
        kolicina.setText(odabrano.getKolicinapr());
        grupaproizvoda.setText(odabrano.getGrupaproizvoda());
        sirovinskisastav.setText(odabrano.getSirovinskisastav());
        cijena.setText(String.valueOf(odabrano.getCijena()));
        
           SimpleDateFormat df = new SimpleDateFormat(Pomocno.FORMAT_DATUM_UNOS);   
        try {
            datumproizvodnje.setText(df.format(odabrano.getDatumproizvodnje()));
        } catch (Exception e) {
            datumproizvodnje.setText("");
        }
   
         try {
            rokizrade.setText(df.format(odabrano.getRokizrade()));
        } catch (Exception e) {
            rokizrade.setText("");
        }
         
         DefaultListModel<Materijal> mmo = new DefaultListModel<>();
        for (Materijal l : odabrano.getMaterijali()) {
            mmo.addElement(l);
        }
        materijaliNaProizvodu.setModel(mmo);
        
        DefaultListModel<Rad> m1ro = new DefaultListModel<>();
        for (Rad l1 : odabrano.getRadovi()) {
            m1ro.addElement(l1);
        }
        radoviNaProizvodu.setModel(m1ro);
        
          ucitajSliku();
        
        
        
    }//GEN-LAST:event_listaValueChanged

    private void listaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_listaKeyPressed
          if(evt.getKeyCode()==
                KeyEvent.VK_ENTER){
            listaValueChanged(null);
        }
    }//GEN-LAST:event_listaKeyPressed

    private void uvjetKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uvjetKeyPressed
          if(evt.getKeyCode()==
                KeyEvent.VK_ENTER){
            akcijaTraziActionPerformed(null);
        }
    }//GEN-LAST:event_uvjetKeyPressed

    private void akcijaPromijenaSlikeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaPromijenaSlikeActionPerformed
            if(odabrano==null){
           return;
       }
        
        
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Slike", "jpg", "png", "gif", "jpeg");
        
        JFileChooser fileChooser = new JFileChooser(System.getProperty("user.home"));
        fileChooser.setFileFilter(filter);
        
        int returnVal = fileChooser.showOpenDialog(getRootPane());
        
        if(returnVal==JFileChooser.APPROVE_OPTION){
            
            BufferedImage novaSlika=null;
            try {
                novaSlika = ImageIO.read(fileChooser.getSelectedFile());
                File dat = new File("slike" + File.separator + "proizvodi" + File.separator + odabrano.getSifra() + ".png");
                if(dat.exists()){
                    dat.renameTo(new File("slike" + File.separator + "proizvodi" + File.separator + odabrano.getSifra() + "_ " + new Date().getTime() +".png"));
                }
                ImageIO.write(novaSlika, "png", dat);
            } catch (IOException ex) {
                Logger.getLogger(Proizvodi.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
            ucitajSliku();
            
        }
   

    }//GEN-LAST:event_akcijaPromijenaSlikeActionPerformed
 @SuppressWarnings({"unchecked", "UseSpecificCatch", "CallToPrintStackTrace"})
    private void akcijaGenerirajPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaGenerirajPDFActionPerformed
           if(odabrano==null ||
                lista.getSelectedValuesList().isEmpty()){
            JOptionPane.showMessageDialog(rootPane,"Prvo odaberite stavku","PogreÅ¡ka",JOptionPane.ERROR_MESSAGE);
            this.lista.requestFocus();
            return;
        }  
        try{
        InputStream inputStream = new FileInputStream ("reports/MojaFirmaReport1.jrxml");        

      //      JRBeanCollectionDataSource beanColDataSource = new
        //JRBeanCollectionDataSource(); 

         /*   Map parameters = new HashMap();
          parameters.put("proizvod",odabrano);
          parameters.put("nazivr",odabrano.getNaziv());*/            
             
            JasperDesign jasperDesign = JRXmlLoader.load(inputStream);
            JasperReport jasperReport = JasperCompileManager.compileReport(jasperDesign);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport,null,Baza.getVeza());
            JasperViewer.viewReport(jasperPrint,false);
            JasperExportManager.exportReportToPdfFile(jasperPrint, "d:/MojaFirmaReport1.pdf"); 

            ProcessBuilder pb = new ProcessBuilder("cmd", "/C start " + "d:/MojaFirmaReport1.pdf");
               pb.start();
       }
       catch(Exception e){
           e.printStackTrace();
       }
        
     
    }//GEN-LAST:event_akcijaGenerirajPDFActionPerformed
         
        
                                                      

    private void ucitajSliku(){
         File sp = new File("slike" + File.separator + "proizvodi" + File.separator + odabrano.getSifra() + ".png");
       if(!sp.exists()){
           sp=new File("slike" + File.separator + "proizvodi" + File.separator + "nepoznato.png");
       }
        BufferedImage slikaSdiska;
        try {
            slikaSdiska = ImageIO.read(sp);
             BufferedImage manjaslika =
  Scalr.resize(slikaSdiska, Scalr.Method.QUALITY, Scalr.Mode.AUTOMATIC,
               slika.getWidth(), slika.getHeight(), Scalr.OP_ANTIALIAS);
        slika.setIcon(new ImageIcon(manjaslika));
        } catch (IOException ex) {
            Logger.getLogger(Proizvodi.class.getName()).log(Level.SEVERE, null, ex);
        }
}
         
    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton akcijaDodajMaterijalProizvodu;
    private javax.swing.JButton akcijaDodajNovi;
    private javax.swing.JButton akcijaDodajRadoveProizvodu;
    private javax.swing.JButton akcijaGenerirajPDF;
    private javax.swing.JButton akcijaObrisi;
    private javax.swing.JButton akcijaObrisiIzMaterijala;
    private javax.swing.JButton akcijaObrisiIzRadova;
    private javax.swing.JButton akcijaOdustani;
    private javax.swing.JButton akcijaPromijenaSlike;
    private javax.swing.JButton akcijaPromijeni;
    private javax.swing.JButton akcijaTrazi;
    private javax.swing.JTextField cijena;
    private javax.swing.JTextField datumproizvodnje;
    private javax.swing.JTextField dimenzija;
    private javax.swing.JTextField grupaproizvoda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextField kolicina;
    private javax.swing.JList lista;
    private javax.swing.JList materijaliNaProizvodu;
    private javax.swing.JTextField nazivpr;
    private moja_firma.model.Proizvod proizvod1;
    private javax.swing.JList radoviNaProizvodu;
    private javax.swing.JTextField rokizrade;
    private javax.swing.JTextField sirovinskisastav;
    private javax.swing.JLabel slika;
    private javax.swing.JList sviMaterijali;
    private javax.swing.JList sviRadovi;
    private javax.swing.JTextField uvjet;
    // End of variables declaration//GEN-END:variables
}
